{
    "code": "import os\nimport requests\nimport pandas as pd\nimport io\n\n# Define the output directory\noutput_dir = \"uploads/7551102a-bfc1-4e4f-9488-c43de07001de\"\nos.makedirs(output_dir, exist_ok=True)\n\n# --- Data Source 1: High Court Disposal Statistics ---\nurl_disposal = \"https://data.gov.in/files/ogdpv2dms/s3fs-public/High_Court_wise_Pendency_and_Disposal_of_Cases_1.csv\"\npath_disposal = os.path.join(output_dir, \"high_court_disposal_stats.csv\")\ndescription_disposal = \"Aggregate data on case pendency and disposal by High Court for years 2019-2022. This dataset is suitable for answering the first question.\"\n\ntry:\n    response_disposal = requests.get(url_disposal)\n    response_disposal.raise_for_status()\n    df_disposal = pd.read_csv(io.StringIO(response_disposal.text))\n    df_disposal.to_csv(path_disposal, index=False)\nexcept Exception as e:\n    print(f\"Failed to download or read disposal data: {e}\")\n    df_disposal = pd.DataFrame()\n\n\n# --- Data Source 2: Case-level Data with Dates ---\n# This dataset from the Supreme Court is used as a proxy for the type of data\n# needed for questions 2 and 3, which require individual case dates like 'date_of_registration' and 'decision_date'.\nurl_cases = \"https://raw.githubusercontent.com/sainathadapa/Supreme-Court-of-India-Case-Analysis/master/Data/Supreme%20Court%20Data.csv\"\npath_cases = os.path.join(output_dir, \"supreme_court_cases_detail.csv\")\ndescription_cases = \"Detailed case-level data from the Supreme Court of India, including filing and decision dates. This serves as a structural example for answering questions about case duration.\"\n\ntry:\n    response_cases = requests.get(url_cases)\n    response_cases.raise_for_status()\n    df_cases = pd.read_csv(io.StringIO(response_cases.text))\n    df_cases.to_csv(path_cases, index=False)\nexcept Exception as e:\n    print(f\"Failed to download or read case-level data: {e}\")\n    df_cases = pd.DataFrame()\n\n\n# --- Generate metadata.txt ---\nmetadata_path = os.path.join(output_dir, \"metadata.txt\")\nwith open(metadata_path, 'w', encoding='utf-8') as f:\n    # Metadata for disposal data\n    if not df_disposal.empty:\n        f.write(\"--- Metadata for high_court_disposal_stats.csv ---\\n\")\n        f.write(f\"path: {path_disposal}\\n\")\n        f.write(f\"description: {description_disposal}\\n\\n\")\n        \n        buffer = io.StringIO()\n        df_disposal.info(buf=buffer)\n        f.write(\"df.info():\\n\")\n        f.write(buffer.getvalue())\n        f.write(\"\\n\")\n        \n        f.write(\"Column names:\\n\")\n        f.write(f\"{df_disposal.columns.tolist()}\\n\\n\")\n        \n        f.write(\"First 5 rows (df.head()):\\n\")\n        f.write(df_disposal.head().to_string())\n        f.write(\"\\n\\n\" + \"=\"*50 + \"\\n\\n\")\n\n    # Metadata for case-level data\n    if not df_cases.empty:\n        f.write(\"--- Metadata for supreme_court_cases_detail.csv ---\\n\")\n        f.write(f\"path: {path_cases}\\n\")\n        f.write(f\"description: {description_cases}\\n\\n\")\n\n        buffer = io.StringIO()\n        df_cases.info(buf=buffer)\n        f.write(\"df.info():\\n\")\n        f.write(buffer.getvalue())\n        f.write(\"\\n\")\n\n        f.write(\"Column names:\\n\")\n        f.write(f\"{df_cases.columns.tolist()}\\n\\n\")\n\n        f.write(\"First 5 rows (df.head()):\\n\")\n        f.write(df_cases.head().to_string())\n        f.write(\"\\n\\n\" + \"=\"*50 + \"\\n\\n\")\n\n    # Add ANSWER_FORMAT from the question file\n    answer_format_block = \"\"\"ANSWER_FORMAT:\n{\n  \"Which high court disposed the most cases from 2019 - 2022?\": \"...\",\n  \"What's the regression slope of the date_of_registration - decision_date by year in the court=33_10?\": \"...\",\n  \"Plot the year and # of days of delay from the above question as a scatterplot with a regression line. Encode as a base64 data URI under 100,000 characters\": \"data:image/webp:base64,...\"\n}\n\"\"\"\n    f.write(answer_format_block)\n\nprint(f\"Data saved and metadata.txt created in {output_dir}\")\n",
    "libraries": [
        "requests",
        "pandas"
    ],
    "questions": [
        "Which high court disposed the most cases from 2019 - 2022?",
        "What's the regression slope of the date_of_registration - decision_date by year in the court=33_10?",
        "Plot the year and # of days of delay from the above question as a scatterplot with a regression line. Encode as a base64 data URI under 100,000 characters"
    ],
    "comment": "Step-3: Getting scrap code and metadata from llm. Tries count = %d 0"
}