{
    "code": "import pandas as pd\nimport requests\nimport os\nimport io\n\n# Define the output directory and ensure it exists\noutput_dir = \"uploads/897ba14c-cd76-4cd3-85dc-3b5446307d52\"\nos.makedirs(output_dir, exist_ok=True)\n\n# Define file paths\ndata_file_path = os.path.join(output_dir, \"data.csv\")\nmetadata_file_path = os.path.join(output_dir, \"metadata.txt\")\n\n# URL of the dataset\nurl = \"https://raw.githubusercontent.com/tovyn/jodi/master/data/all_cases.csv\"\n\n# Download the data\ntry:\n    response = requests.get(url)\n    response.raise_for_status()  # Raise an exception for bad status codes\n    # Use io.StringIO to read the content directly into pandas\n    csv_data = io.StringIO(response.text)\n    df = pd.read_csv(csv_data)\n\n    # Save the dataframe to a CSV file\n    df.to_csv(data_file_path, index=False)\n\n    # Generate metadata\n    with open(metadata_file_path, \"w\", encoding=\"utf-8\") as f:\n        # Capture df.info()\n        buffer = io.StringIO()\n        df.info(buf=buffer)\n        info_str = buffer.getvalue()\n        f.write(\"Output of df.info():\\n\")\n        f.write(info_str)\n        f.write(\"\\n\")\n\n        # Write column names\n        f.write(\"Column names:\\n\")\n        f.write(f\"{df.columns.tolist()}\\n\\n\")\n\n        # Write first few rows\n        f.write(\"First few rows (df.head()):\\n\")\n        f.write(df.head().to_string())\n        f.write(\"\\n\\n\")\n\n        # Write path to data file\n        f.write(\"also add path to data files that\\n\")\n        f.write(f\"{data_file_path}\\n\\n\")\n        \n        # Write the answer format block\n        answer_format = \"\"\"ANSWER_FORMAT:\n```json\n{\n  \\\"Which high court disposed the most cases from 2019 - 2022?:\\\": \\\"...\\\",\n  \\\"What's the regression slope of the date_of_registration - decision_date by year in the court=33_10?:\\\": \\\"...\\\",\n  \\\"Plot the year and # of days of delay from the above question as a scatterplot with a regression line. Encode as a base64 data URI under 100,000 characters\\\": \\\"data:image/webp:base64,...\\\"\n}\n```\"\"\"\n        f.write(answer_format)\n\nexcept requests.exceptions.RequestException as e:\n    print(f\"Error downloading data: {e}\")\nexcept Exception as e:\n    print(f\"An error occurred: {e}\")\n",
    "libraries": [
        "pandas",
        "requests"
    ],
    "questions": [
        "Which high court disposed the most cases from 2019 - 2022?",
        "What's the regression slope of the date_of_registration - decision_date by year in the court=33_10?",
        "Plot the year and # of days of delay from the above question as a scatterplot with a regression line. Encode as a base64 data URI under 100,000 characters"
    ],
    "comment": "Step-3: Getting scrap code and metadata from llm. Tries count = %d 0"
}